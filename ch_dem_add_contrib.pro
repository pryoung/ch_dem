

FUNCTION ch_dem_add_contrib, line_data, log_temp, avalfile=avalfile, $
                             log_press=log_press, log_dens=log_dens, $
                             ioneq_file=ioneq_file, dir_lookup=dir_lookup

;+
; NAME:
;     CH_DEM_ADD_CONTRIB
;
; PURPOSE:
;     Adds the contribution functions to the LINE_DATA structure and
;     also handles any blends that are flagged with
;     LINE_DATA.BLEND_TAG.
;
; CATEGORY:
;     CHIANTI; differential emission measure (DEM).
;
; CALLING SEQUENCE:
;     Result = CH_DEM_ADD_CONTRIB( Line_Data, Log_Temp )
;
; INPUTS:
;     Line_Data: The structure returned by CH_DEM_READ_LINE_IDS.
;     Log_Temp:  A 1D array of Log10 temperatures at which the
;                contribution functions are calculated.
;
; OPTIONAL INPUTS:
;     AvalFile:  The name of a file containing the A-values for the
;                transitions listed in LINE_DATA. By default the
;                routine looks for 'pop_lookup_line_list.txt' in the
;                current working directory, which is a file
;                automatically generated by
;                ch_dem_write_lookup_tables. 
;     Log_Dens:  A scalar specifying the Log10 of the electron number
;                density. Either log_dens or log_press should be
;                defined. 
;     Log_Press: A scalar specifying the Log10 of the electron
;                pressure (N_e*T). Either log_dens or log_press
;                should be defined.
;     Ioneq_File: The name of an ionization fraction file. If not
;                 specified, then !ioneq_file is used (the CHIANTI
;                 default).
;     Dir_Lookup: The name of a directory containing the lookup tables
;                 for the contribution function calculation. If not
;                 set, then the routine first looks in $CH_DEM_LOOKUP
;                 (if defined), then the current working directory. 
;
; OUTPUTS:
;     A structure with the same format as LINE_DATA is returned, but
;     with two changes:
;      1. If any lines were flagged with 'blend_tag' then they are
;         merged in a single entry (using ch_dem_process_blends).
;      2. The 'contrib' tag is filled with the contribution function
;         (a 1D array of same size as LOG_TEMP).
;
; CALLS:
;     CH_DEM_PROCESS_BLENDS, CH_LOOKUP_GOFNT
;
; EXAMPLE:
;     IDL> line_data=ch_dem_read_line_ids('line_list.txt',int_file='ints.txt')
;     IDL> ch_dem_write_lookup_tables,line_data,/execute
;     IDL> log_temp=fltarr(81)/40.+5.0
;     IDL> result=ch_dem_add_contrib(line_data,log_temp,log_dens=9.0)
;
; MODIFICATION HISTORY:
;     Ver.0.1, 31-Jul-2019, Peter Young.
;     Ver.0.2, 12-Aug-2019, Peter Young.
;       Now adds a tag to line_data for the contribution function;
;       modified how default lookup directory is set up.
;-


IF n_params() LT 2 THEN BEGIN
  print,'Use:  IDL> output = ch_dem_add_contrib( line_data, log_temp [, log_dens=, log_press=, '
  print,'                                        avalfile=, ioneq_file=, dir_lookup= ] )'
  print,''
  print,'   Either log_dens or log_press must be specified.'
  return,-1
ENDIF 



;
; Look for the A-value file associated with the lookup tables. Note
; this file is automatically written to the working directory when you
; run ch_dem_write_lookup_tables. 
;
avalfile='pop_lookup_line_list.txt'
chck=file_search(avalfile,count=count)
IF count NE 0 THEN BEGIN
  aval_str=ch_dem_read_avals(avalfile)
ENDIF ELSE BEGIN
  print,'% CH_DEM_ADD_CONTRIB: the A-value file ('+avalfile+') does not exist. Please run ch_dem_write_lookup_tables'
  print,'                      in the working directory.'
  return,-1
ENDELSE 


;
; Here I look for the lookup tables. The priority is:
;    1. dir_lookup input
;    2. $CH_DEM_LOOKUP
;    3. $CHIANTI_LOOKUP
;    4. current directory.
;
;lookup_dir='.'
IF getenv('CH_DEM_LOOKUP') NE '' THEN lookup_dir=getenv('CH_DEM_LOOKUP')
IF n_elements(dir_lookup) NE 0 THEN BEGIN
  chck=file_info(dir_lookup)
  IF chck.exists EQ 1 AND chck.directory EQ 1 THEN lookup_dir=dir_lookup
ENDIF

;
; Now add a tag to LINE_DATA that will contain the contribution
; functions for the lines. This function is defined for the LTEMP
; temperatures.
; If you call ch_dem_linear_fit repeatedly, then need to delete the
; contrib from the previous call.
;
nt=n_elements(log_temp)
line_data=add_tag(temporary(line_data),dblarr(nt),'contrib')



;
; Pick out the standard lines in LINE_DATA and add the contribution functions
; to the structure, in the tag "contrib".
; Note that it's necessary to reset the contrib list, otherwise
; it just keeps accumulating entries.
;
k=where(line_data.blend_tag EQ '',nk)
n=n_elements(line_data)
FOR i=0,n-1 DO BEGIN
  aval_str=ch_dem_read_avals(avalfile,line_data=line_data[i])
  cstruc=ch_lookup_gofnt(line_data[i].ion, $
                         dir_lookup=lookup_dir, aval_str=aval_str, $
                         /noabund,log_temp=log_temp,log_dens=log_dens, log_press=log_press, $
                         ioneq_file=ioneq_file)
  IF n_tags(cstruc) NE 0 THEN BEGIN 
    line_data[i].contrib=cstruc.gofnt
  ENDIF ELSE BEGIN
    print,'% CH_DEM_ADD_CONTRIB: problem with lookup table access. Returning...'
    return,-1
  ENDELSE 
ENDFOR 



;
; Any blends flagged with 'blend_tag' are merged here. Note these are
; expected to be lines from the same species that are separated in
; wavelength, but considered blended for the DEM minimization. For
; example, Fe X 184.54+190.04.
;
; If blends exist, then 'ld' will end up with less elements than the
; input 'line_data'.
;
ld=ch_dem_process_blends(line_data)



return,ld

END
